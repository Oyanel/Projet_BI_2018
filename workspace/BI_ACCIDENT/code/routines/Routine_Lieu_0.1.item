package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Routine_Lieu {

	/**
     * concatInt: generateId.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} String("obs") input: first.
     * 
     * {example} generateId("1","2","3") # 12.
     */
    public static String generateId(String ctg_route, String circ, String vosp, String prof, String etat, String infra, String situ, String env){
    	if (null == ctg_route 	|| !isInt(ctg_route) 	|| 
    		null == circ 	|| !isInt(circ) || 
    		null == vosp 	|| !isInt(vosp)	||
    		null == prof 	|| !isInt(prof)	||
    		null == etat 	|| !isInt(etat)	||
    		null == infra 	|| !isInt(infra) ||
    		null == situ 	|| !isInt(situ)	||
    		null == env 	|| !isInt(env))
    	{
    		return "";
    	}
    	String result = format(ctg_route) + format(circ) + format(vosp) + format(prof) + format(etat) + format(infra) + format(situ) + format(env);    	
    	return result;
    }
    
    /**
     * concatInt: format.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} toString(1) # "01".
     */
    public static String format(String s){
    	if(s == null){
    		return "00";
    	}else if(s == "0"){
    		return "00";
    	}else if(Integer.parseInt(s) < 10){
    		return "0" + Integer.parseInt(s);
    	}else{
    		return s;
    	}
    }
    
    /**
     * isInt: choc.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} String("1") input: first.
     * 
     * {example} isInt("1") # "1".
     */
    public static Boolean isInt(String s){
    	if(s == null){
    		return false;
    	}
    	try { 
            Integer.parseInt(s); 
        } catch(NumberFormatException e) { 
            return false; 
        } catch(NullPointerException e) {
            return false;
        }
        return true;
    }
    
    
    /**
     * concatInt: categorie_route.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} obstacle_fixe(1) # "Autoroute".
     */
    public static String categorie_route(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Autoroute";
	    	case 2 :
	    		return "Route Nationale";
	    	case 3 :
	    		return "Route Départementale";
	    	case 4 :
	    		return "Voie Communale";
	    	case 5 :
	    		return "Hors réseau public";
	    	case 6 :
	    		return "Parc de stationnement ouvert à la circulation publique";
	    	case 9 :
	    		return "Autres";		
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: circulation.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} circulation(1) # "A sens unique".
     */
    public static String circulation(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "A sens unique";
	    	case 2 :
	    		return "Bidirectionelle";
	    	case 3 :
	    		return "A chaussées séparées";
	    	case 4 :
	    		return "Avec voies d’affectation variable";	
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: vosp.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} vosp(1) # "Piste cyclable".
     */
    public static String vosp(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Piste cyclable";
	    	case 2 :
	    		return "Banque cyclable";
	    	case 3 :
	    		return "Voie réservée";
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: profil_route.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} profil_route(1) # "Plat".
     */
    public static String profil_route(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Plat";
	    	case 2 :
	    		return "Pente";
	    	case 3 :
	    		return "Sommet de côte";
	    	case 4 :
	    		return "Bas de côte";
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: etat_surface.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} etat_surface(1) # "Normale".
     */
    public static String etat_surface(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Normale";
	    	case 2 :
	    		return "Mouillée";
	    	case 3 :
	    		return "Flaques";
	    	case 4 :
	    		return "Innondée";
	    	case 5 :
	    		return "Enneigée";
	    	case 6 :
	    		return "Boue";
	    	case 7 :
	    		return "Verglacée";
	    	case 8 :
	    		return "Corps gras - huile";
	    	case 9 :
	    		return "Autre";
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: infrastructure.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} infrastructure(1) # "Souterrain - tunnel".
     */
    public static String infrastructure(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Souterrain - tunnel";
	    	case 2 :
	    		return "Pont - autopont";
	    	case 3 :
	    		return "Bretelle d’échangeur ou de raccordement";
	    	case 4 :
	    		return "Voie ferrée";
	    	case 5 :
	    		return "Carrefour aménagé";
	    	case 6 :
	    		return "Zone piétonne";
	    	case 7 :
	    		return "Zone de péage";
	    	default :
	    		return "";
    	}
    }
    
    
    /**
     * concatInt: situation.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} situation(1) # "Sur chaussée".
     */
    public static String situation(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 1 :
	    		return "Sur chaussée";
	    	case 2 :
	    		return "Sur bande d’arrêt d’urgence";
	    	case 3 :
	    		return "Sur accotement";
	    	case 4 :
	    		return "Sur trottoir";
	    	case 5 :
	    		return "Sur piste cyclable";
	    	default :
	    		return "";
    	}
    }
    
    /**
     * concatInt: envEcole.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} int("i") input: first.
     * 
     * {example} envEcole(00) # "0".
     */
    public static String envEcole(String obs){
    	if (null == obs || !isInt(obs)) {
    		return "";
    	}
    	int i = Integer.parseInt(obs);
    	switch(i){
	    	case 3 :
	    		return "Ecole proche";
	    	case 99 :
	    		return "Ecole lointaine";
	    	default :
	    		return "Pas d'école à proximité";
    	}
    }
}
